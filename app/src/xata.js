// Generated by Xata Codegen 0.23.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import 'dotenv/config'
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */

const tables = [
  {
    name: "Requests",
    columns: [
      { name: "Title", type: "string" },
      { name: "Artist", type: "string" },
      { name: "Album", type: "string" },
      { name: "Minutes", type: "int" },
      { name: "Seconds", type: "int" },
      { name: "DiscogRef", type: "string" },
      { name: "SpotifyRef", type: "string" },
      { name: "Status", type: "multiple" },
      { name: "Notes", type: "text" },
    ],
  },
];
/** @type { import('../../client/src').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL:
    "https://Ashley-Oliver-s-workspace-v2o60o.us-east-1.xata.sh/db/GDR",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient({
    apiKey: process.env.XATA_API_KEY,
    });
  return instance;
};
